---
title: "Despesa com Saúde Pública Mundial (% do PIB)"
format: html
editor: visual
subtitle: "Grupo: Pedro Harael e Thiago Henrique"
---

```{r}
#| label: setup-packages
#| message: false
#| warning: false
#| echo: false

library(WDI)
library(ggthemes)
library(knitr)
library(kableExtra)
library(rnaturalearth)
library(tidyverse)
library(ggrepel)
library(gganimate)
library(transformr)
library(extrafont)
```

## Gráfico Animado da Despesa com Saúde Pública

```{r}
#| label: animated-plot
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 8
#| fig-align: center
#| echo: false

indicator <- c("Despesa com Saúde Pública (% do PIB)" = 'SH.XPD.GHED.GD.ZS')
datWM9 <- WDI(indicator, country="all",start = '2000', end = '2022') 

Data_info <- WDI_data 

name_health_exp <- as.data.frame(Data_info$series) %>%
  filter(indicator == "SH.XPD.GHED.GD.ZS") %>%
  select(name) %>%
  pull() 

source_health_exp <- as.data.frame(Data_info$series) %>%
  filter(indicator == "SH.XPD.GHED.GD.ZS") %>%
  select(sourceOrganization) %>%
  pull()

title_graph_pt <- "Despesa com Saúde Pública (% do PIB)"

source_abnt <- paste0("Fonte: WORLD BANK. World Development Indicators. Disponível em: ", 
                      "[https://databank.worldbank.org/source/world-development-indicators](https://databank.worldbank.org/source/world-development-indicators)", 
                      ". Acesso em: 09 jun. 2025.") 

modern_font <- "Roboto Condensed" 

animated_plot <- ne_countries(returnclass = "sf") %>%
  left_join(datWM9, c("iso_a2" = "iso2c")) %>%
  filter(iso_a2 != "ATA") %>% 
  ggplot(aes(fill = `Despesa com Saúde Pública (% do PIB)`)) + 
  geom_sf() +
  scale_fill_viridis_c(
    labels = scales::percent_format(scale = 1), 
    name = "" 
  ) + 
  theme(
    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"), 

    legend.position = "right", 
    legend.title = element_text(angle = 90, hjust = 0.5, size = 10, family = modern_font), 
    legend.text = element_text(size = 8, family = modern_font), 
    legend.key.size = unit(0.5, "cm"), 

    plot.title = element_text(hjust = 0.5, size = 16, face = "bold", margin = margin(b = 10), family = modern_font), 
    
    plot.caption = element_text(hjust = 0, size = 8, margin = margin(t = 10), family = modern_font), 

    panel.background = element_rect(fill = "white", colour = NA), 
    panel.grid.major = element_line(colour = "grey80", size = 0.2), 
    panel.grid.minor = element_blank(),
    
    text = element_text(family = modern_font) 
  ) +
  labs(
    title = paste0(title_graph_pt, " em {closest_state}"), 
    fill = NULL, 
    caption = source_abnt 
  ) +
  transition_states(year, transition_length = 1, state_length = 4) 

animate(animated_plot, fps = 12, duration = 34.5, renderer = gifski_renderer())
```
